package dc.human.kimbanbagi.tableJava.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.Random;

public class tempoPWDAO {
	private Connection conn;
	
	public tempoPWDAO() {
		try {
				Class.forName("oracle.jdbc.OracleDriver");
				
				conn = DriverManager.getConnection(
						"jdbc:oracle:thin:@192.168.0.42:1521/xe",
						"c##tableJava",
						"tableJava"
				);
				
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void check(tempoPWDTO pwDto) {
		String typedId = pwDto.getId();
		String typedName = pwDto.getName();
		
		String dbId;
		String dbName;
		int cnt;
		
		try {
			String sql = "" +
									"SELECT COUNT(*) AS cnt FROM users " +
									"WHERE user_id='" + typedId +"' AND user_name='" + typedName + "'";
			PreparedStatement pstmt = conn.prepareStatement(sql);
			ResultSet rs = pstmt.executeQuery();
			if(rs.next()) {
				cnt = rs.getInt("cnt");
				System.out.println(cnt);
				if(cnt == 1) {
					System.out.println("임시비밀번호");
					tempoPW(typedId);
				} else {
					System.out.println("데이터 베이스 에러");
				}
				
			} else {
				System.out.println("일치하는 정보가 없습니다.");
			}
			
			rs.close();
			pstmt.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
	}
	
	public void tempoPW(String id) {
		String typedId = id;
		String tempoPw = randomPW(8);
		
		java.util.Date now = new java.util.Date();
		Date sqlDate = new Date(now.getTime());
		
		//임시비밀번호 생성 후 temporary_password 테이블에 저장
		try {
			String sql = "" +
								"INSERT INTO temporary_password (user_id, temporary_pwd, created_date, created_id, updated_date, updated_id) " +
								"VALUES (?, ?, ?, ?, ?, ?)";
			
			PreparedStatement pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, typedId);
			pstmt.setString(2, tempoPw);
			pstmt.setDate(3, sqlDate);
			pstmt.setString(4, typedId);
			pstmt.setDate(5, sqlDate);
			pstmt.setString(6, typedId);
			
			int row = pstmt.executeUpdate();
			
			System.out.println("변경된 row : " + row);
			
			pstmt.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	
	// 영문 + 숫자가 섞인 8자리 문자열 생성 메소드
	public static String randomPW(int range) {
		StringBuilder sb = new StringBuilder();
		Random rd = new Random();
		
		for(int i=0; i<range; i++) {
			if(rd.nextBoolean()) {
				sb.append(rd.nextInt(10));
			}else {
				sb.append((char)(rd.nextInt(26)+65));
			}
		}
		
		return sb.toString();
	}
	


}
